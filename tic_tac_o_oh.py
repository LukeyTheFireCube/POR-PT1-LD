'''A monolithic and poorly written tic-tac-toe for you to refactor.'''
# Generated by ChatGPT 4
# Game state
from src.grid import Grid
p1 = "X"
p2 = "O"
empty = " "
grid = Grid(3)
board = grid.get_grid()



def check_conditions():
    # Check for win
    win_conditions = get_win_conditions()
    for wc in win_conditions:
        if board[wc[0]] == board[wc[1]] == board[wc[2]] != empty:
            print("Player", board[wc[0]], "wins!")
            exit(0)

    # Check for tie
    if empty not in board:
        print("It's a tie!")
        exit(0)

def get_win_conditions():
    return [(0, 1, 2), (3, 4, 5), (6, 7, 8), (0, 3, 6), (1, 4, 7), (2, 5, 8), (0, 4, 8), (2, 4, 6)]


# Game loop
while True:
    board.print_board(board)
    check_conditions()



    # Get next move
    while True:
        player = p1 if board.count(empty) % 2 == 1 else p2
        move = input("Next move for player " + player + " (1-9): ")
        if move.isdigit() and 1 <= int(move) <= 9 and board[int(move)] == empty:
            board[int(move) - 1] = player
            break
        else:
            print("Invalid move, try again.")
